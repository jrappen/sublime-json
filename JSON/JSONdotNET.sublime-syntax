%YAML 1.2
---
#   YAML Documentation:
#       https://yaml.org/spec/1.2/spec.html
#   Sublime Text Documentation:
#       https://www.sublimetext.com/docs/syntax.html
#       https://www.sublimetext.com/docs/syntax.html#testing
#       https://www.sublimetext.com/docs/scope_naming.html
#   This file is being maintained at:
#       https://github.com/sublimehq/Packages/blob/master/JSON/JSONdotNET.sublime-syntax

name: 'JSON.NET'
scope: source.json.jsondotnet
version: 2

extends: JSON.sublime-syntax                                                    # https://www.sublimetext.com/docs/syntax.html#inheritance

hidden_file_extensions:
  - jsondotnet                                                                  # for syntax tests

first_line_match: |-
  (?xi:
    ^ \s* // .*? -\*- .*? \bjson\.net\b .*? -\*-                                # editorconfig
  )

########################################################################################################################

contexts:

####[ Values ][ Strings ]###############################################################################################

  strings:
    - meta_prepend: true

    - include: double-quoted-string-with-datetime

  double-quoted-string-with-datetime:

    #   Date formatting:
    #       https://www.iso.org/standard/70907.html (Basic rules)
    #       https://www.iso.org/standard/70908.html (Extensions)
    #       https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings

    - match: |-
        (?x:
          (\")
          (                                                                     # json.NET v4.5+ / ISO DateTime like "2000-01-01T00:00:00Z"
            \d{4} [-] [0-1]\d [-] [0-3]\d
            [Tt]
            [0-2]\d [:] [0-5]\d [:] [0-5]\d
            (?:
              Z                                                                 # zulu hour, military term for UTC time-zone
            | [-+] \d{1,2} (?: [:]\d{1,2})?
            )?
          )
          (\")
        )
      scope: >-
        meta.string.jsondotnet
        string.quoted.double.datetime.jsondotnet
      captures:
        1: punctuation.definition.string.begin.jsondotnet
        2: constant.other.timestamp.jsondotnet
        3: punctuation.definition.string.end.jsondotnet

    - match: |-
        (?x:
          (\")
          (
            (\\)\/Date\(\d+\)(\\)\/                                             # when erroneously containing double escapes
          |     \/Date\(\d+\)    \/                                             # datetime strings in the deprecated format
          )
          (\")
        )
      scope: >-
        meta.string.jsondotnet
        string.quoted.double.datetime.jsondotnet
      captures:
        1: punctuation.definition.string.begin.jsondotnet
        2: invalid.deprecated.constant-other-timestamp.jsondotnet
        3: invalid.illegal.double-escape.jsondotnet
        4: invalid.illegal.double-escape.jsondotnet
        5: punctuation.definition.string.end.jsondotnet
