%YAML 1.2
---
# https://yaml.org/spec/1.2/spec.html
# https://www.sublimetext.com/docs/syntax.html#ver-dev
# https://www.sublimetext.com/docs/syntax.html#testing:ver-dev
# https://www.sublimetext.com/docs/scope_naming.html
name: JSON5
scope: source.json.json5
version: 2

# https://www.sublimetext.com/docs/syntax.html#inheritance
extends: Packages/JSON/JSONC.sublime-syntax

file_extensions:

  - json5
    # https://json5.org/
    # https://spec.json5.org/

  - .babelrc
    # Babel.js File-relative Configuration
    # https://babeljs.io/docs/en/config-files

  - .babelrc.json
    # Babel.js File-relative Configuration
    # https://babeljs.io/docs/en/config-files

  - .jupyterlab-settings
    # JupyterLab User Settings
    # https://jupyterlab.readthedocs.io/en/stable/user/directories.html?highlight=json5#jupyterlab-user-settings-directory

  - babel.config.json
    # Babel.js Project-wide Configuration
    # https://babeljs.io/docs/en/config-files

  - next.config.json
    # Vercel Next.js Configuration
    # https://nextjs.org/docs/api-reference/next.config.js/introduction

  - nextrc.json
    # Vercel Next.js Configuration
    # https://nextjs.org/docs/api-reference/next.config.js/introduction

first_line_match: |-
  (?xi:
    ^ \s* // .*? -\*- .*? \bjson5\b .*? -\*-  # editorconfig
  )


contexts:

  # TODO: check whitespace valid chars

####[ Numbers ]#########################################################################################################


  # completely override original context
  decimal-floats:
    - match: |-
        (?x:
          ([-+]?)
          (
            {{pos_integer_decimal}}
            (?:
              # 1. 1.e1 1.e-1 1.e+1 1.1 1.1e1 1.1e-1 1.1e+1
              (\.)\d* {{exponent}}?
              # 1e1 1+e1 1-e1
              | {{exponent}}
            )
            # .1 .1e1 .1e+1 .1e-1
            | (\.)\d+ {{exponent}}?
          )
        )
      scope: meta.number.float.decimal.json5
      captures:
        1: constant.numeric.sign.json5
        2: constant.numeric.value.json5
        3: punctuation.separator.decimal.json5
        4: punctuation.separator.decimal.json5
    - match: ([-+]?)(Infinity)
      scope: meta.number.float.decimal.json5
      captures:
        1: constant.numeric.sign.json5
        2: constant.language.infinity.json5
    - match: ([-+]?)(NaN)
      scope: meta.number.float.decimal.json5
      captures:
        1: constant.numeric.sign.json5
        2: constant.language.nan.json5

  integers:
    - meta_prepend: true
    - include: hexadecimal-integers

  # completely override original context
  decimal-integers:
    - match: ([-+]?)({{pos_integer_decimal}})
      scope: meta.number.integer.decimal.json5
      captures:
        1: constant.numeric.sign.json5
        2: constant.numeric.value.json5

  hexadecimal-integers:
    - match: ([-+]?)(0[xX])(\h+)
      scope: meta.number.integer.hexadecimal.json5
      captures:
        1: constant.numeric.sign.json5
        2: constant.numeric.base.json5
        3: constant.numeric.value.json5

####[ Strings ]#########################################################################################################

  # TODO: add multiline with new-line-escapes
  # TODO: add warnings for paragraph separator & line separator

  strings:
    - meta_append: true
    - include: single-quoted-string-ahead

  single-quoted-string-ahead:
    - match: (?=')
      push: single-quoted-string

  single-quoted-string:
    - meta_scope: meta.string.json5 string.quoted.single.json5
    - match: "'"
      scope: punctuation.definition.string.begin.json5
      set: inside-single-quoted-string

  inside-single-quoted-string:
    - meta_scope: meta.string.json5 string.quoted.single.json5
    - meta_include_prototype: false
    - match: "'"
      scope: punctuation.definition.string.end.json5
      pop: 1
    - include: single-quoted-string-escape-characters
    - match: \n
      scope: invalid.illegal.unclosed-string.json5
      pop: 1

  single-quoted-string-escape-characters:
    - match: \\\'
      scope: constant.character.escape.single-quote.json5
    - include: string-escape-characters

  valid-string-escape-characters:
    - meta_prepend: true
    - match: \\v
      scope: constant.character.escape.vertical-tab.json5
    - match: (\\0)([0-9])?
      captures:
        1: constant.character.escape.null.json5
        2: invalid.illegal.expected-non-digit-char.json5
    - match: \\x[0-9a-fA-F]{2}
      scope: constant.character.escape.unicode-symbol.basic-latin-or-latin-1-supplement.json5
    - match: \\u[0-9a-fA-F]{4}\\u[0-9a-fA-F]{4}
      scope: constant.character.escape.unicode-symbol.utf16-surrogate-pair.json5

####[ Mapping ]#########################################################################################################

  # TODO: add ECMAScript identifier

  top-level-mapping-key:
    - meta_append: true
    - match: "'"
      scope: punctuation.definition.string.begin.json5
      push: top-level-mapping-key-single-quoted

  top-level-mapping-key-single-quoted:
    - clear_scopes: 1
    - meta_scope: meta.mapping.key.json5 meta.toc-list.json5 meta.string.json5 string.quoted.single.json5
    - meta_include_prototype: false
    - include: inside-single-quoted-string

  mapping-key:
    - meta_append: true
    - match: "'"
      scope: punctuation.definition.string.begin.json5
      push: mapping-key-single-quoted

  mapping-key-single-quoted:
    - clear_scopes: 1
    - meta_scope: meta.mapping.key.json5 meta.string.json5 string.quoted.single.json5
    - meta_include_prototype: false
    - include: inside-single-quoted-string
