%YAML 1.2
---
name: JSON5
scope: source.json.json5
version: 2

extends:
  - Packages/JSON/syntaxes/json-feature-comment.sublime-syntax
  - Packages/JSON/syntaxes/json-feature-separator-sequence.sublime-syntax
  - Packages/JSON/syntaxes/json-feature-constant-language-ieee754.sublime-syntax
  - Packages/JSON/syntaxes/json-feature-integer-hexadecimal.sublime-syntax
  - Packages/JSON/syntaxes/json-feature-string-quoted-single.sublime-syntax
  - Packages/JSON/syntaxes/json-feature-meta-mapping-key-ecma.sublime-syntax

file_extensions:
  - json5                               # https://json5.org/
                                        # https://spec.json5.org/#summary-of-features
                                        # https://262.ecma-international.org/5.1/

hidden_file_extensions:
  - .babelrc                            # Babel.js File-relative Configuration
  - .babelrc.json                       # Babel.js File-relative Configuration
  - babel.config.json                   # Babel.js Project-wide Configuration
                                        # https://babeljs.io/docs/en/config-files

  - .jupyterlab-settings                # JupyterLab User Settings
                                        # https://jdirectories.html?highlight=json5#jupyterlab-user-settings-directory

  - .parcelrc                           # parcel Bundler Configuration
                                        # https://parceljs.org/features/plugins/#.parcelrc
                                        # https://github.com/parcel-bundler/parcel

  - .postcssrc.json                     # PostCSS Configuration
                                        # https://postcss.org

  - next.config.json                    # Vercel Next.js Configuration
  - nextrc.json                         # https://nextjs.org/docs/api-reference/next.config.js/introduction

  - techdocs_metadata.json              # Spotify's @backstage/techdocs_common Configuration
                                        # https://backstage.io/docs/features/techdocs/techdocs-overview
                                        # https://github.com/backstage/backstage/tree/master/packages/techdocs-common

first_line_match: |-
  (?xi:
    ^ \s* // .*? -\*- .*? \bjson5\b .*? -\*-
  )

###[ CONTEXTS ]#################################################################

contexts:

###[ WHITESPACE ]###############################################################

  # NOTE: unfortunately SublimeHQ's syntax engine currently does not support
  #       changing which characters are valid whitespace chars
  #       https://spec.json5.org/#white-space

###[ VALUES / NUMBERS ]#########################################################

  decimal-float-basic:
    - match: |-
        (?x:
          (?:
            ([-+])
            (\s+)??
          )?
          (
            (?:
              (0+)?? [1-9] \d*
            | 0
            )
            (?:
              (\.) \d* ({{numeric_exponent}})?                                  # 1. 1.e1 1.e-1 1.e+1 1.1 1.1e1 1.1e-1 1.1e+1
            | ({{numeric_exponent}})                                            # 1e1 1e-1 1e+1
            )
          | (\.) \d+ ({{numeric_exponent}})?                                    # .1 .1e1 .1e-1 .1e+1
          )
        )
      scope: meta.number.float.decimal.json
      captures:
        1: constant.numeric.sign.json
        2: invalid.illegal.whitespace.json
        3: constant.numeric.value.json
        4: invalid.illegal.leading-zero.json
        5: punctuation.separator.decimal.json
        6: constant.numeric.value.exponent.json
        7: constant.numeric.value.exponent.json
        8: punctuation.separator.decimal.json
        9: constant.numeric.value.exponent.json
      pop: 1

  decimal-integer-basic:
    - match: |-
        (?x:
          (?:
            ([-+])
            (\s+)??
          )?
          (
            (0+)?? [1-9] \d*
          | 0
          )
        )
      scope: meta.number.integer.decimal.json
      captures:
        1: constant.numeric.sign.json
        2: invalid.illegal.whitespace.json
        3: constant.numeric.value.json
        4: invalid.illegal.leading-zero.json
      pop: 1

###[ VALUES / STRINGS ]#########################################################

  valid-unicode-string-escapes:
    - meta_prepend: true

    - match: '(\\)u[0-9a-fA-F]{4}(\\)u[0-9a-fA-F]{4}'
      scope: constant.character.escape.unicode-symbol.utf16-surrogate-pair.json
      captures:
        1: punctuation.definition.escape.string.json
        2: punctuation.definition.escape.string.json

    - match: '(\\)x[0-9a-fA-F]{2}'
      scope: >-
        constant.character.escape.unicode-symbol.basic-latin-or-latin-1-supplement.json
      captures:
        1: punctuation.definition.escape.string.json

  valid-special-string-escapes:
    - meta_prepend: true

    - match: ((\\)\x{2028})(.*)$\n?
      captures:
        1: constant.character.escape.line-separator.json
        2: >-
          punctuation.definition.escape.string.json
          punctuation.separator.continuation.line.json
        3: invalid.illegal.expected-eol-after-line-continuation.json

    - match: ((\\)\x{2029})(.*)$\n?
      captures:
        1: constant.character.escape.paragraph-separator.json
        2: >-
          punctuation.definition.escape.string.json
          punctuation.separator.continuation.line.json
        3: invalid.illegal.expected-eol-after-line-continuation.json

    - match: (\\)$\n?
      captures:
        1: >-
          punctuation.definition.escape.string.json
          punctuation.separator.continuation.line.json

    - match: (\\)v
      scope: constant.character.escape.vertical-tab.json
      captures:
        1: punctuation.definition.escape.string.json

    - match: ((\\)0)([0-9])?
      captures:
        1: constant.character.escape.null.json
        2: punctuation.definition.escape.string.json
        3: invalid.illegal.unexpected-digit-character.json

  invalid-string-escapes:
    - meta_prepend: true

    - match: |-
        (?x:
          ([^\\])
          (?:
            \x{2028}
          | \x{2029}
          )
        )
      captures:
        1: invalid.illegal.expected-backslash-char.json
