%YAML 1.2
---
name: json-meta-mapping-key-ecma
scope: source.json
version: 2
hidden: true

extends:
  - Packages/JSON/JSON.sublime-syntax

###[ VARIABLES ]################################################################

variables:
  identifier_escape: |-
    (?x:
      \\u
      (?:
        \h{4}
      | \{\h+\}
      )
    )

  identifier_start: |-
    (?x:
      [_$\p{L}\p{Nl}]
    | {{identifier_escape}}
    )

  identifier_part: |-
    (?x:
      [_$\p{L}\p{Nl}\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]
    | {{identifier_escape}}
    )

  identifier_break: |-
    (?x:
      (?!{{identifier_part}})
    )

  identifier_name: |-
    (?x:
      {{identifier_start}}
      {{identifier_part}}*
      {{identifier_break}}
    )

###[ CONTEXTS ]#################################################################

contexts:

###[ STRUCTURES / OBJECTS ]#####################################################

  valid-mapping-keys:
    - meta_append: true

    # looking ahead at `identifier_start` would've been faster with possibly
    # invalid matches, but we want to make sure we only match valid ecma
    # `identifier_name`s as keys
    - match: (?={{identifier_name}})
      push: mapping-key-ecma

  mapping-key-ecma:
    - clear_scopes: 1
    - meta_include_prototype: false
    - meta_scope: >-
        meta.mapping.key.json
        meta.string.json
        string.unquoted.plain.json

    - match: '{{identifier_break}}'
      pop: 1
