%YAML 1.2
---
#   YAML Documentation:
#       https://yaml.org/spec/1.2/spec.html
#   Sublime Text Documentation:
#       https://www.sublimetext.com/docs/syntax.html
#       https://www.sublimetext.com/docs/syntax.html#testing
#       https://www.sublimetext.com/docs/scope_naming.html
#   This file is being maintained at:
#       https://github.com/sublimehq/Packages/blob/master/JSON/JSONC.sublime-syntax

name: JSONC
scope: source.json.jsonc
version: 2

extends: JSON.sublime-syntax                                                    # https://www.sublimetext.com/docs/syntax.html#inheritance

file_extensions:
  - jsonc

  - sublime-build                                                               # https://www.sublimetext.com/docs/build_systems.html
  - sublime-color-scheme                                                        # https://www.sublimetext.com/docs/color_schemes.html
  - sublime-commands
  - sublime-completions                                                         # https://www.sublimetext.com/docs/completions.html
  - sublime-keymap                                                              # https://www.sublimetext.com/docs/key_bindings.html
  - sublime-macro
  - sublime-menu                                                                # https://www.sublimetext.com/docs/menus.html
  - sublime-mousemap
  - sublime-project                                                             # https://www.sublimetext.com/docs/projects.html
  - sublime-settings                                                            # https://www.sublimetext.com/docs/settings.html
  - sublime-theme                                                               # https://www.sublimetext.com/docs/themes.html
  - sublime-workspace                                                           # https://www.sublimetext.com/docs/projects.html

hidden_file_extensions:
  - .ember-cli

  - .esformatter                                                                # https://github.com/millermedeiros/esformatter
    # esformatter: ECMAScript code formatter

  - .eslintrc                                                                   # https://eslint.org/docs/user-guide/configuring/
    # ESLint Configuration

  - .eslintrc.json                                                              # https://eslint.org/docs/user-guide/configuring/
    # ESLint Configuration

  - .hintrc                                                                     # https://webhint.io/docs/user-guide/configuring-webhint/summary/
    # Webhint Configuration

  - .htmlhintrc                                                                 # https://htmlhint.com/docs/user-guide/configuration
    # HTMLHint Configuration

  - .jsfmtrc                                                                    # https://github.com/rdio/jsfmt#formatting
    # jsfmt: For formatting, searching and re-writing JavaScript

  - .jshintrc                                                                   # https://www.jshint.com/docs/#options
    # JSHint

  - .jslintrc                                                                   # https://www.jslint.com/lint.html
    # JSLint's implementation of JSHint

  - .stylintrc                                                                  # https://github.com/SimenB/stylint
    # stylint Configuration

  - .swcrc                                                                      # https://swc.rs/docs/configuring-swc
    # swc Configuration

  - eslintrc.json                                                               # https://eslint.org/docs/user-guide/configuring/
    # ESLint Configuration

  - languagebabel

  - tsconfig.json                                                               # https://www.typescriptlang.org/docs/handbook/tsconfig-json.html
    # TypeScript Configuration

first_line_match: |-
  (?xi:
    ^ \s* // .*? -\*- .*? \bjsonc\b .*? -\*-                                    # editorconfig
  )

########################################################################################################################

contexts:

  # TODO: allow empty content?

  # TODO: JSDoc comments? https://www.typescriptlang.org/docs/handbook/jsdoc-supported-types.html

####[ Comments ]########################################################################################################

  valid-comments:
    - include: line-comments
    - include: block-comments

  invalid-comments: []

  line-comments:
    - include: line-comment-double-slash

  line-comment-double-slash:
    - match: //
      scope: punctuation.definition.comment.jsonc
      push: line-comment-double-slash-content

  line-comment-double-slash-content:
    - meta_include_prototype: false
    - meta_scope: comment.line.double-slash.jsonc

    - include: eol-pop

  block-comments:
    - match: /\*
      scope: punctuation.definition.comment.begin.jsonc
      push: block-comment-content

  block-comment-content:
    - meta_include_prototype: false
    - meta_scope: comment.block.jsonc

    - match: \*/
      scope: punctuation.definition.comment.end.jsonc
      pop: 1

####[ Structures ][ Arrays ]############################################################################################

  array-separators:
    - include: valid-array-separators
    - include: invalid-array-separators

  valid-array-separators:
    - match: ','
      scope: punctuation.separator.sequence.jsonc
      push: array-item

  invalid-array-separators: []
